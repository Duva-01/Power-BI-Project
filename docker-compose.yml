version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "ventas_stream:1:1"
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgreSQL/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    command: postgres -c listen_addresses='*'

  metabase:
    image: metabase/metabase
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: postgres
      MB_DB_PORT: 5432
      MB_DB_USER: postgres
      MB_DB_PASS: postgres
      MB_DB_HOST: postgres-db
    networks:
      - backend

  mage:
    image: mageai/mageai:latest
    container_name: mage
    ports:
      - "6789:6789"
    volumes:
      - ./keys/gcp_key.json:/home/src/mage_data/keys/gcp_key.json
      - ./mage:/home/src/mage_data
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /home/src/mage_data/keys/gcp_key.json
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
